[{"id":0,"href":"/docs/two/","title":"2 Post","section":"Docs","content":" meow meow 2 # "},{"id":1,"href":"/docs/controlling/","title":"Controlling temp, top_p and top_k","section":"Docs","content":" Controlling temp, top_p and top_k # So I have been working on a TTS model and for the last few days I am playing with few hyperparameters. In my specific use case, I found that temperature, top_p and top_k played a major role in audio generated.\ntemperature # helps control the randomness / creativity of the model. Basically you adjust the probabilities to force randomness or determinism. During training the temperature is 1. Mathematically, when the probability of next token is being calculated the model will divide that by your temperature value.\nPython function of softmax with temperature :\ndef softmax_with_temperature(logits, temperature=1.0): logits /= temperature exp_logits = np.exp(logits - np.max(logits)) # subtracting max for numerical stability softmax_output = exp_logits / np.sum(exp_logits) return softmax_output top_p # top_p selects most likely token from a prob distribution, considering cumulative probability until it reaches a predefined threshold \u0026ldquo;p\u0026rdquo;\n"}]